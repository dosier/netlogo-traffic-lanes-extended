source('C:/Users/simon/Dropbox/School/Artificial Intelligence 2018 -/2020-2021/Semester 2a/Agent Technology Practical/Final Project/netlogo-traffic-lanes-extended/experiment_analysis.R')
#Data Preparation
library(data.table)
dataset <- read.csv("Traffic Intersection Automated experiment-spreadsheet.csv", skip=13, row.names = 1, header = FALSE)
dataset <- dataset[-c(1,2,3,4,5,6,7,8),]
#Average Wait Plot
data_avg_wait <- dataset[,seq(1,ncol(dataset), by=3)]
avg_wait_tl <- data_avg_wait[c(0:19)]
avg_wait_tl <- as.data.frame(apply(avg_wait_tl, 2, as.numeric))
names(avg_wait_tl)[1] <- "avg_wait"
avg_wait_q <- data_avg_wait[c(20:39)]
avg_wait_q <- as.data.frame(apply(avg_wait_q, 2, as.numeric))
names(avg_wait_q)[1] <- "avg_wait"
png("average_wait_time.png", 400, 800)
boxplot(
avg_wait_tl$avg_wait,
avg_wait_q$avg_wait,
main = "Average Wait time traffic lights vs Priority Queue",
names = c("Traffic Lights", "Priority Queue"),
ylab="Average Wait Time (ticks)",
xlab="Intersection type"
)
dev.off()
#Total cars Plot
data_total_cars <- dataset[,seq(2,ncol(dataset), by=3)]
data_total_cars_tl <- data_total_cars[c(0:19)]
data_total_cars_tl <- as.data.frame(apply(data_total_cars_tl, 2, as.numeric))
names(data_total_cars_tl)[1] <- "total_cars"
data_total_cars_q <- data_total_cars[c(20:39)]
data_total_cars_q <- as.data.frame(apply(data_total_cars_q, 2, as.numeric))
names(data_total_cars_q)[1] <- "total_cars"
png("total_cars.png", 400, 800)
boxplot(
data_total_cars_tl$total_cars,
data_total_cars_q$total_cars,
main = "Total cars passing intersection traffic lights vs Priority Queue",
names = c("Traffic Lights", "Priority Queue"),
ylab="Number of cars",
xlab="Intersection type"
)
dev.off()
#Accidents per tick Plot
data_accidents <- dataset[,seq(3,ncol(dataset), by=3)]
data_accidents_tl <- data_accidents[c(0:19)]
data_accidents_tl <- as.data.frame(apply(data_accidents_tl, 2, as.numeric))
names(data_accidents_tl)[1] <- "accidents_per_tick"
data_accidents_q <- data_accidents[c(0:19)]
data_accidents_q <- as.data.frame(apply(data_accidents_q, 2, as.numeric))
names(data_accidents_q)[1] <- "accidents_per_tick"
png("average_accidents.png", 400, 800)
boxplot(
data_accidents_tl$accidents_per_tick,
data_accidents_q$accidents_per_tick,
main = "Average accidents per tick traffic lights vs Priority Queue",
names = c("Traffic Lights", "Priority Queue"),
ylab="Average accidents per tick",
xlab="Intersection type"
)
dev.off()
# Unpaired T-tests
t_test_avg_wait <- capture.output(
t.test(
avg_wait_tl$avg_wait,
avg_wait_q$avg_wait))
writeLines(t_test_avg_wait, con = file("t_test_avg_wait.txt"))
dev.off()
t_test_total_cars <- capture.output(
t.test(
data_total_cars_tl$total_cars,
data_total_cars_q$total_cars))
writeLines(t_test_total_cars, con = file("t_test_total_cars.txt"))
dev.off()
t_test_accidents <- capture.output(
t.test(
data_accidents_tl$accidents_per_tick,
data_accidents_q$accidents_per_tick))
writeLines(t_test_accidents, con = file("t_test_accidents.txt"))
dev.off()
#Data Preparation
library(data.table)
dataset <- read.csv("Traffic Intersection Automated experiment-spreadsheet.csv", skip=13, row.names = 1, header = FALSE)
dataset <- dataset[-c(1,2,3,4,5,6,7,8),]
#Average Wait Plot
data_avg_wait <- dataset[,seq(1,ncol(dataset), by=3)]
avg_wait_tl <- data_avg_wait[c(0:19)]
avg_wait_tl <- as.data.frame(apply(avg_wait_tl, 2, as.numeric))
names(avg_wait_tl)[1] <- "avg_wait"
avg_wait_q <- data_avg_wait[c(20:39)]
avg_wait_q <- as.data.frame(apply(avg_wait_q, 2, as.numeric))
names(avg_wait_q)[1] <- "avg_wait"
png("average_wait_time.png", 400, 800)
boxplot(
avg_wait_tl$avg_wait,
avg_wait_q$avg_wait,
main = "Average Wait time traffic lights vs Priority Queue",
names = c("Traffic Lights", "Priority Queue"),
ylab="Average Wait Time (ticks)",
xlab="Intersection type"
)
dev.off()
#Total cars Plot
data_total_cars <- dataset[,seq(2,ncol(dataset), by=3)]
data_total_cars_tl <- data_total_cars[c(0:19)]
data_total_cars_tl <- as.data.frame(apply(data_total_cars_tl, 2, as.numeric))
names(data_total_cars_tl)[1] <- "total_cars"
data_total_cars_q <- data_total_cars[c(20:39)]
data_total_cars_q <- as.data.frame(apply(data_total_cars_q, 2, as.numeric))
names(data_total_cars_q)[1] <- "total_cars"
png("total_cars.png", 400, 800)
boxplot(
data_total_cars_tl$total_cars,
data_total_cars_q$total_cars,
main = "Total cars passing intersection traffic lights vs Priority Queue",
names = c("Traffic Lights", "Priority Queue"),
ylab="Number of cars",
xlab="Intersection type"
)
dev.off()
#Accidents per tick Plot
data_accidents <- dataset[,seq(3,ncol(dataset), by=3)]
data_accidents_tl <- data_accidents[c(0:19)]
data_accidents_tl <- as.data.frame(apply(data_accidents_tl, 2, as.numeric))
names(data_accidents_tl)[1] <- "accidents_per_tick"
data_accidents_q <- data_accidents[c(0:19)]
data_accidents_q <- as.data.frame(apply(data_accidents_q, 2, as.numeric))
names(data_accidents_q)[1] <- "accidents_per_tick"
png("average_accidents.png", 400, 800)
boxplot(
data_accidents_tl$accidents_per_tick,
data_accidents_q$accidents_per_tick,
main = "Average accidents per tick traffic lights vs Priority Queue",
names = c("Traffic Lights", "Priority Queue"),
ylab="Average accidents per tick",
xlab="Intersection type"
)
dev.off()
# Unpaired T-tests
t_test_avg_wait <- capture.output(
t.test(
avg_wait_tl$avg_wait,
avg_wait_q$avg_wait))
writeLines(t_test_avg_wait, con = file("t_test_avg_wait.txt"))
t_test_total_cars <- capture.output(
t.test(
data_total_cars_tl$total_cars,
data_total_cars_q$total_cars))
writeLines(t_test_total_cars, con = file("t_test_total_cars.txt"))
t_test_accidents <- capture.output(
t.test(
data_accidents_tl$accidents_per_tick,
data_accidents_q$accidents_per_tick))
writeLines(t_test_accidents, con = file("t_test_accidents.txt"))
